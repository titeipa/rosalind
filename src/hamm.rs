#![allow(dead_code)]

pub fn hamming(alpha: Vec<u8>, beta: Vec<u8>) -> u64 {
    let it = alpha.iter().zip(&beta);
    let mut dist: u64 = 0;
    for (a, b) in it {
        if a != b {
            dist += 1;
        }
    }
    dist
}

pub fn hamming_with_array_ref(alpha: &'_ [u8], beta: &'_ [u8]) -> u64 {
    let it = alpha.iter().zip(beta);
    let mut dist: u64 = 0;
    for (a, b) in it {
        if a != b {
            dist += 1;
        }
    }
    dist
}

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn test() {
        assert_eq!(
            hamming(b"CATCGTAATGACGGCCT".to_vec(), b"GAGCCTACTAACGGGAT".to_vec()),
            7
        );
        assert_eq!(
            hamming_with_array_ref(b"CATCGTAATGACGGCCT", b"GAGCCTACTAACGGGAT"),
            7
        );

        assert_eq!(
            hamming_with_array_ref(b"TCGTGAGTATAATTCTCTACAACTCATATCTGGACTGTGTCCTAGGGTAGATGGCGTAGAGCTCGGTCATCAACCTATGAATGCTCAGTATCGCCCGGACCTTTGGAGACCACGACATATGGTAGATCCGGATTAAGATAGACAGAGGACCATTTTGTCAGGATGGTGTTTATACGAGGGTCCTTGACATACCACCTCCTGACGGCAGTCGTAATCTCCAGTTCTTACATTTTCCTCGCATTTCCAATGCTTTAAGGTAACGTTTGGCACCGGAGCTTGTAATCGACATATATACTAAGGGCGAACGGAATTATGTGCACGCGCGGGCCTCTAACGACCAGCGAGAGGACAGCTTGTCGGTCCACGCACTGCACAGCGTTTTATATTAGCAGAGCAGATGGCCCTCAGTCGCTTTCGGAATAGTTTCCAGGTGGGGCATGTTGCTCAAGCAGACGGTGAGCGAACGCTCGAGCAGAAAACGACCAATGATAAAGCTCGAGACTCATGGGGCGCTACGACTCTCTCGGGATAACTGGAAGCTTCTATAATACAGGGATCGGGAACCAAATTAAAATTAACAAGATAGCCCGCGGTTCGATAATAATCCGCTCCATTTCCGGTTATCCCATCTAATAGCCGGTGCATGGAAACGTGATTATTATTTTCACGCTCCTCGCGCACACACGTTACCTCCCCAAACCAGCGCCGCGGCGAGGACGTGTTTTCTATTCTCTATTACCATGGAGAGGTCATCTTATTTCAGGCGTAAGGGAGATAGAACCTGTGCACTGGGCTGGCTACTCGAGTCCCGATACCCGGGTCGTATAAGAGGTGAAGCGTCTTCCCTCGTGTCACGTTTCTGGCCTACAGCACACAGCAACAACCTGTCTAGCTCTGCAATAGGCATACCAGGTGTTAGTCGTAGTATGTACGCTGCAAGACATGTCCATGCTTGACAACAGCCAACGACCCAGCTCTCTACT", 
            b"CAAAGTATAAATTCTGCAACCCGTTATTTCTTGGCGGTGTCATGCGGGAAATGGCGGCCGACTCGAGCTGTAAACAATTGGTTGTCTAGGTCGAACGACCGCTTGGGTTACCAACTCTGGGGTAGAGTTCACTTAAGAGCTACAGAGGATCCTGTGTTCAGGATGGCGGCTATTCAAGAGTAGGTAAGCTAATAGTTGAACTAGTCCTCATTAGGGTCCATCACTTAGATCATTCTCTACTTGACTAGGCCTTGCGGGGACCTTTGGTGCAGTTGCACTTACTCTTAAGAAACTATATCGGGGATGGACTCAACTCGCGGGTTCGGCACCCTATCTGGCAGTGAGGCACCAGCTGGTCTTTGCCTTTGATTTTTAACCATTTTATTTATCCTAGAATGAGGGGTACGCTGGCACTGCAAATAATTGCGAGTAGCGACAAGGTTCTGTTGGATACGCTCATCTAACTCTAGATCTGTCCACGACCGATGCCACAGCGGGAGTCCAGCCTGGCGGTACCACATGCGGGAGATTTTTCGAATATTCCAAACTTCATGAACTTGTCAAAACATTAAAATACATTATTGAGACTACCATGCGAACACAATATTCATTTGCTATGACTCTTAATTCAAACGATTGCGGCATGTAGGCCCGCTTAATCTATTCATGCGACTAGCGAATTAATAAAAGGGCGCCAAGCAAGCGCCTGGGCGAAGTGCTCACTAGACTCCTCAAATGGCTTTGCGACGACATCCCATCTCAAATGTAAGGGAAATTGACCGTGGAGTAGCAAAAAAGATTTACCTTTCTGATGCCTGCAGCGGATGACAGGGTCAGTTTGGTCCCGAGCGACACATTGTTTGCCAACACGACATGGCTACCATGTGCGTAGCACAGCAGTATTTATCGAAGTGATAAGTCCTACGATACGGACCAAACAACATGTCTATATTTGGAACCAGCTCTGAGAACGTGTTATTAGT"),
            487
        );
    }
}
